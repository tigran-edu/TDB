Выведите название, площадь, цену здания, а также название региона здания,
для всех зданий, площадь которых больше 30, а цена меньше 50.
1.---
SELECT building.name, area, price, city.name as city_name
from building join city on building.city_id=city.id
where area > 30 and price < 50;
---

Выведите названия всех зданий, в материалах которых присутствуют золото ("gold")
или мрамор ("marble").
2.---
SELECT building.name 
from building join (building_material join material on building_material.material_id=material.id) on building.id = building_material.building_id
where material.name like "%marble%" or material.name like "%gold%";
---

Выведите имена и фамилии покупателей, которые не хотят приобрести недвижимость
в Геленджике ("Gelendzhik").
3.---
SELECT buyer.name, buyer.surname
from buyer left join (bid left join city on bid.city_id=city.id) on bid.buyer_id=buyer.id
group by buyer.id
having sum(city.name="Gelendzhik")=0 or sum(city.name="Gelendzhik") is NULL;
---

Для каждого покупателя выведите его имя, фамилию и название материала, который не встречается
ни в одном его заказе. Если таких материалов несколько, выведите строчку для каждого материала.
Если таких материалов для данного покупателя нет, ничего не выводите.
4.---
SELECT buyer.name, buyer.surname, material.name
from (buyer left join (bid left join bid_material on bid.id=bid_material.bid_id) on bid.buyer_id=buyer.id) cross join material
group by buyer.id, material.id
having sum(bid_material.material_id=material.id)=0 or sum(bid_material.material_id=material.id) is NULL;
---

Выведите имена городов, в которых средняя площадь объекта недвижимости выше, чем средняя площадь 
по всем объектам невижимости (во всех городах).
5.---
SELECT city.name 
from building left join city on city.id=building.city_id, building as bl
group by city.name
having AVG(building.area) > AVG(bl.area);
---

Для каждого владельца недвижимости выведите его имя, фамилию и цену самого дорогого объекта
среди всех его объектов. Если у владельца нет объектов, выведите NULL.
6.---
SELECT owner.name, owner.surname, MAX(building.price)
from owner left join building on owner.id = building.owner_id
group by owner.id;
---

Выведите имена и фамилии всех покупателей, которые готовы купить здание 
под именем "Object 101".
7.---
SELECT distinct buyer.name, buyer.surname
from bid 
left join buyer on bid.buyer_id = buyer.id
left join building on bid.city_id = building.city_id
left join bid_material on bid_material.bid_id=bid.id
left join building_material on building_material.building_id=building.id 
and bid_material.material_id = building_material.material_id
where building.name = "Object 101"
and bid.max_price >= building.price
and building.area >= bid.min_area
group by bid.id
having SUM(building_material.material_id is NULL and bid_material.material_id is not NULL) = 0;
---

Для каждого города выведите его название и количество объектов в этом городе,
на которые есть хотя бы один покупатель.
8.---
SELECT city.name, SUM(tb.building_id is not NULL)
from city
left join (SELECT distinct building.city_id as city_id, building.id as building_id
from bid 
left join buyer on bid.buyer_id = buyer.id
left join building on bid.city_id = building.city_id
left join bid_material on bid_material.bid_id=bid.id
left join building_material on building_material.building_id=building.id 
and bid_material.material_id = building_material.material_id
where bid.max_price >= building.price
and building.area >= bid.min_area
group by bid.id, building.id
having SUM(building_material.material_id is NULL and bid_material.material_id is not NULL) = 0) tb on city.id = tb.city_id
group by city.name;
---